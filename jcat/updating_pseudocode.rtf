{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf360
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red127\green0\blue85;\red0\green0\blue192;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid1\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\margl1440\margr1440\vieww20860\viewh15120\viewkind0
\deftab720
\pard\pardeftab720\ql\qnatural

\f0\fs28 \cf0 This pseudo code should describe all the major functions necessary to assign each trader their own private value distribution that can be updated using Bayes' rule based on the occurrence of transactions.\
\
What I want to do:\
\
\pard\tx220\tx720\pardeftab720\li720\fi-720\ql\qnatural
\ls1\ilvl0\cf0 {\listtext	1.	}*Set up a trader to have sub class of DailyRandomValuer - UpdatingRandomValuer\
{\listtext	2.	}Use the DailyRandomValuerGenerator to set the distribution (edu.cuny.random.Beta or edu.cuny.random.Gamma?)\
{\listtext	3.	}Get initial private value (edu.cuny.cat.AbstractTradingAgent.getPrivateValue())\
{\listtext	4.	}Save it someplace for future reference (\cf2 static\cf0  Logger \cf3 logger\cf0  = Logger.getLogger(BayesianUpdating.\cf2 class\cf0 );?)\
{\listtext	5.	}*Create parameters for an initial distribution hugging the initial private value\
{\listtext	6.	}Feed those params to the appropriate distribution (valuer.setDistribution(createDistribution()))\
{\listtext	7.	}DailyRandomValuer should take care of the actual drawing\
{\listtext	8.	}*Use transaction listener to make a running tally of transaction values as they come (this class will be a list of transactions in a given day and their inclusion boolean)\
{\listtext	9.	}*Use a random number generator to determine if a value is included or not in the updating (Includer class assigns the booleans to the list in 8)\
{\listtext	10.	}*At day's end use a conjugate prior rule to update the underlying distribution using only the randomly chosen values (Updater class gets the current distribution params and then updates them using the list of transactions)\
{\listtext	11.	}Feed new params to the appropriate distribution (valuer.setDistribution(createDistribution()))\
{\listtext	12.	}DailyRandomValuer should take care of the actual drawing\
\pard\tx560\pardeftab720\ql\qnatural
\cf0 *require new class\
\pard\pardeftab720\ql\qnatural
\cf0 \
}